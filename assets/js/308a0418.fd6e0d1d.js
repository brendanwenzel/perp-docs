"use strict";(self.webpackChunklushan_docs=self.webpackChunklushan_docs||[]).push([[370],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),k=s(a),c=r,m=k["".concat(d,".").concat(c)]||k[c]||u[c]||l;return a?n.createElement(m,i(i({ref:t},p),{},{components:a})):n.createElement(m,i({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},7436:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return p},default:function(){return k}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],o={},d=void 0,s={unversionedId:"Interfaces/IAccountBalance",id:"Interfaces/IAccountBalance",isDocsHomePage:!1,title:"IAccountBalance",description:"Functions",source:"@site/docs/Interfaces/IAccountBalance.md",sourceDirName:"Interfaces",slug:"/Interfaces/IAccountBalance",permalink:"/lushan-docs/docs/Interfaces/IAccountBalance",editUrl:"https://github.com/perpetual-protocol/lushan-docs/tree/main/docs/Interfaces/IAccountBalance.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"VirtualToken",permalink:"/lushan-docs/docs/Contracts/VirtualToken"},next:{title:"IBaseToken",permalink:"/lushan-docs/docs/Interfaces/IBaseToken"}},p=[{value:"Functions",id:"functions",children:[{value:"modifyTakerBalance",id:"modifytakerbalance",children:[]},{value:"modifyOwedRealizedPnl",id:"modifyowedrealizedpnl",children:[]},{value:"settleOwedRealizedPnl",id:"settleowedrealizedpnl",children:[]},{value:"settleQuoteToOwedRealizedPnl",id:"settlequotetoowedrealizedpnl",children:[]},{value:"settleBalanceAndDeregister",id:"settlebalanceandderegister",children:[]},{value:"registerBaseToken",id:"registerbasetoken",children:[]},{value:"deregisterBaseToken",id:"deregisterbasetoken",children:[]},{value:"updateTwPremiumGrowthGlobal",id:"updatetwpremiumgrowthglobal",children:[]},{value:"getClearingHouseConfig",id:"getclearinghouseconfig",children:[]},{value:"getOrderBook",id:"getorderbook",children:[]},{value:"getVault",id:"getvault",children:[]},{value:"getBaseTokens",id:"getbasetokens",children:[]},{value:"getAccountInfo",id:"getaccountinfo",children:[]},{value:"getTakerOpenNotional",id:"gettakeropennotional",children:[]},{value:"getTotalOpenNotional",id:"gettotalopennotional",children:[]},{value:"getTotalDebtValue",id:"gettotaldebtvalue",children:[]},{value:"getMarginRequirementForLiquidation",id:"getmarginrequirementforliquidation",children:[]},{value:"getPnlAndPendingFee",id:"getpnlandpendingfee",children:[]},{value:"hasOrder",id:"hasorder",children:[]},{value:"getBase",id:"getbase",children:[]},{value:"getQuote",id:"getquote",children:[]},{value:"getTakerPositionSize",id:"gettakerpositionsize",children:[]},{value:"getTotalPositionSize",id:"gettotalpositionsize",children:[]},{value:"getTotalPositionValue",id:"gettotalpositionvalue",children:[]},{value:"getTotalAbsPositionValue",id:"gettotalabspositionvalue",children:[]}]},{value:"Events",id:"events",children:[{value:"VaultChanged",id:"vaultchanged",children:[]},{value:"PnlRealized",id:"pnlrealized",children:[]}]}],u={toc:p};function k(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"modifytakerbalance"},"modifyTakerBalance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function modifyTakerBalance(\n  ) external returns (int256, int256)\n")),(0,l.kt)("h3",{id:"modifyowedrealizedpnl"},"modifyOwedRealizedPnl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function modifyOwedRealizedPnl(\n  ) external\n")),(0,l.kt)("h3",{id:"settleowedrealizedpnl"},"settleOwedRealizedPnl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function settleOwedRealizedPnl(\n  ) external returns (int256 pnl)\n")),(0,l.kt)("p",null,"this function is now only called by Vault.withdraw()"),(0,l.kt)("h3",{id:"settlequotetoowedrealizedpnl"},"settleQuoteToOwedRealizedPnl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function settleQuoteToOwedRealizedPnl(\n  ) external\n")),(0,l.kt)("h3",{id:"settlebalanceandderegister"},"settleBalanceAndDeregister"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function settleBalanceAndDeregister(\n    address maker,\n    address baseToken,\n    int256 realizedPnl,\n    int256 fee\n  ) external\n")),(0,l.kt)("p",null,"Settle account balance and deregister base token"),(0,l.kt)("h4",{id:"parameters"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"maker")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The address of the maker")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"baseToken")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The address of the market's base token")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"realizedPnl")),(0,l.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Amount of pnl realized")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"fee")),(0,l.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Amount of fee collected from pool")))),(0,l.kt)("h3",{id:"registerbasetoken"},"registerBaseToken"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function registerBaseToken(\n    address trader,\n    address baseToken\n  ) external\n")),(0,l.kt)("p",null,"every time a trader's position value is checked, the base token list of this trader will be traversed;\nthus, this list should be kept as short as possible"),(0,l.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"trader")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"baseToken")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The address of the trader's base token")))),(0,l.kt)("h3",{id:"deregisterbasetoken"},"deregisterBaseToken"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function deregisterBaseToken(\n    address trader,\n    address baseToken\n  ) external\n")),(0,l.kt)("p",null,"this function is expensive"),(0,l.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"trader")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"baseToken")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The address of the trader's base token")))),(0,l.kt)("h3",{id:"updatetwpremiumgrowthglobal"},"updateTwPremiumGrowthGlobal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function updateTwPremiumGrowthGlobal(\n  ) external\n")),(0,l.kt)("h3",{id:"getclearinghouseconfig"},"getClearingHouseConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getClearingHouseConfig(\n  ) external returns (address)\n")),(0,l.kt)("h3",{id:"getorderbook"},"getOrderBook"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getOrderBook(\n  ) external returns (address)\n")),(0,l.kt)("h3",{id:"getvault"},"getVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getVault(\n  ) external returns (address)\n")),(0,l.kt)("h3",{id:"getbasetokens"},"getBaseTokens"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getBaseTokens(\n  ) external returns (address[])\n")),(0,l.kt)("h3",{id:"getaccountinfo"},"getAccountInfo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getAccountInfo(\n  ) external returns (struct AccountMarket.Info)\n")),(0,l.kt)("h3",{id:"gettakeropennotional"},"getTakerOpenNotional"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTakerOpenNotional(\n  ) external returns (int256)\n")),(0,l.kt)("h3",{id:"gettotalopennotional"},"getTotalOpenNotional"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTotalOpenNotional(\n  ) external returns (int256)\n")),(0,l.kt)("h4",{id:"return-values"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"totalOpenNotional")),(0,l.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"the amount of quote token paid for a position when opening")))),(0,l.kt)("h3",{id:"gettotaldebtvalue"},"getTotalDebtValue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTotalDebtValue(\n  ) external returns (uint256)\n")),(0,l.kt)("h3",{id:"getmarginrequirementforliquidation"},"getMarginRequirementForLiquidation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getMarginRequirementForLiquidation(\n  ) external returns (int256)\n")),(0,l.kt)("p",null,"this is different from Vault._getTotalMarginRequirement(), which is for freeCollateral calculation"),(0,l.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"instead of uint, as it is compared with ClearingHouse.getAccountValue(), which is also an int")))),(0,l.kt)("h3",{id:"getpnlandpendingfee"},"getPnlAndPendingFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getPnlAndPendingFee(\n  ) external returns (int256 owedRealizedPnl, int256 unrealizedPnl, uint256 pendingFee)\n")),(0,l.kt)("h4",{id:"return-values-2"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"owedRealizedPnl")),(0,l.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"the pnl realized already but stored temporarily in AccountBalance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"unrealizedPnl")),(0,l.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"the pnl not yet realized")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"pendingFee")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"the pending fee of maker earned")))),(0,l.kt)("h3",{id:"hasorder"},"hasOrder"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function hasOrder(\n  ) external returns (bool)\n")),(0,l.kt)("h3",{id:"getbase"},"getBase"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getBase(\n  ) external returns (int256)\n")),(0,l.kt)("h3",{id:"getquote"},"getQuote"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getQuote(\n  ) external returns (int256)\n")),(0,l.kt)("h3",{id:"gettakerpositionsize"},"getTakerPositionSize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTakerPositionSize(\n  ) external returns (int256)\n")),(0,l.kt)("h3",{id:"gettotalpositionsize"},"getTotalPositionSize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTotalPositionSize(\n  ) external returns (int256)\n")),(0,l.kt)("h3",{id:"gettotalpositionvalue"},"getTotalPositionValue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTotalPositionValue(\n  ) external returns (int256)\n")),(0,l.kt)("p",null,"a negative returned value is only be used when calculating pnl\nwe use 15 mins twap to calc position value"),(0,l.kt)("h3",{id:"gettotalabspositionvalue"},"getTotalAbsPositionValue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTotalAbsPositionValue(\n  ) external returns (uint256)\n")),(0,l.kt)("h4",{id:"return-values-3"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"sum")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"up positions value of every market, it calls ",(0,l.kt)("inlineCode",{parentName:"td"},"getTotalPositionValue")," internally")))),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("h3",{id:"vaultchanged"},"VaultChanged"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  event VaultChanged(\n    address vault\n  )\n")),(0,l.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"vault")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The address of the vault contract")))),(0,l.kt)("h3",{id:"pnlrealized"},"PnlRealized"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  event PnlRealized(\n    address trader,\n    int256 amount\n  )\n")),(0,l.kt)("p",null,"Emit whenever a trader's ",(0,l.kt)("inlineCode",{parentName:"p"},"owedRealizedPnl")," is updated"),(0,l.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"trader")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"amount")),(0,l.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The amount changed")))))}k.isMDXComponent=!0}}]);