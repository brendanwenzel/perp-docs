"use strict";(self.webpackChunklushan_docs=self.webpackChunklushan_docs||[]).push([[580],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>u});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),p=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=p(t.components);return n.createElement(o.Provider,{value:e},t.children)},k={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,m=d(t,["components","mdxType","originalType","parentName"]),s=p(a),u=r,N=s["".concat(o,".").concat(u)]||s[u]||k[u]||l;return a?n.createElement(N,i(i({ref:e},m),{},{components:a})):n.createElement(N,i({ref:e},m))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=s;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=t,d.mdxType="string"==typeof t?t:r,i[1]=d;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},3791:(t,e,a)=>{a.r(e),a.d(e,{contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var n=a(7462),r=(a(7294),a(3905));const l={},i=void 0,d={unversionedId:"contracts/Vault",id:"contracts/Vault",isDocsHomePage:!1,title:"Vault",description:"Functions",source:"@site/docs/contracts/Vault.md",sourceDirName:"contracts",slug:"/contracts/Vault",permalink:"/lushan-docs/docs/contracts/Vault",editUrl:"https://github.com/perpetual-protocol/lushan-docs/tree/main/docs/contracts/Vault.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"QuoteToken",permalink:"/lushan-docs/docs/contracts/QuoteToken"},next:{title:"VirtualToken",permalink:"/lushan-docs/docs/contracts/VirtualToken"}},o=[{value:"Functions",id:"functions",children:[{value:"receive",id:"receive",children:[]},{value:"initialize",id:"initialize",children:[]},{value:"setTrustedForwarder",id:"settrustedforwarder",children:[]},{value:"setClearingHouse",id:"setclearinghouse",children:[]},{value:"setCollateralManager",id:"setcollateralmanager",children:[]},{value:"setWETH9",id:"setweth9",children:[]},{value:"deposit",id:"deposit",children:[]},{value:"depositFor",id:"depositfor",children:[]},{value:"depositEther",id:"depositether",children:[]},{value:"depositEtherFor",id:"depositetherfor",children:[]},{value:"withdraw",id:"withdraw",children:[]},{value:"withdrawEther",id:"withdrawether",children:[]},{value:"liquidateCollateral",id:"liquidatecollateral",children:[]},{value:"getSettlementToken",id:"getsettlementtoken",children:[]},{value:"decimals",id:"decimals",children:[]},{value:"getTotalDebt",id:"gettotaldebt",children:[]},{value:"getClearingHouseConfig",id:"getclearinghouseconfig",children:[]},{value:"getAccountBalance",id:"getaccountbalance",children:[]},{value:"getInsuranceFund",id:"getinsurancefund",children:[]},{value:"getExchange",id:"getexchange",children:[]},{value:"getClearingHouse",id:"getclearinghouse",children:[]},{value:"getCollateralManager",id:"getcollateralmanager",children:[]},{value:"getWETH9",id:"getweth9",children:[]},{value:"getBalance",id:"getbalance",children:[]},{value:"getBalanceByToken",id:"getbalancebytoken",children:[]},{value:"getCollateralTokens",id:"getcollateraltokens",children:[]},{value:"getAccountValue",id:"getaccountvalue",children:[]},{value:"getFreeCollateral",id:"getfreecollateral",children:[]},{value:"getFreeCollateralByRatio",id:"getfreecollateralbyratio",children:[]},{value:"getFreeCollateralByToken",id:"getfreecollateralbytoken",children:[]},{value:"getSettlementTokenValue",id:"getsettlementtokenvalue",children:[]},{value:"isLiquidatable",id:"isliquidatable",children:[]},{value:"getMarginRequirementForCollateralLiquidation",id:"getmarginrequirementforcollateralliquidation",children:[]},{value:"getCollateralMmRatio",id:"getcollateralmmratio",children:[]},{value:"getRepaidSettlementByCollateral",id:"getrepaidsettlementbycollateral",children:[]},{value:"getLiquidatableCollateralBySettlement",id:"getliquidatablecollateralbysettlement",children:[]},{value:"getMaxRepaidSettlementAndLiquidatableCollateral",id:"getmaxrepaidsettlementandliquidatablecollateral",children:[]}]}],p={toc:o};function m(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"receive"},"receive"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function receive(\n  ) external\n")),(0,r.kt)("p",null,"only used for unwrapping weth in withdrawETH"),(0,r.kt)("h3",{id:"initialize"},"initialize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function initialize(\n  ) external\n")),(0,r.kt)("h3",{id:"settrustedforwarder"},"setTrustedForwarder"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function setTrustedForwarder(\n  ) external\n")),(0,r.kt)("h3",{id:"setclearinghouse"},"setClearingHouse"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function setClearingHouse(\n  ) external\n")),(0,r.kt)("h3",{id:"setcollateralmanager"},"setCollateralManager"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function setCollateralManager(\n  ) external\n")),(0,r.kt)("h3",{id:"setweth9"},"setWETH9"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function setWETH9(\n  ) external\n")),(0,r.kt)("h3",{id:"deposit"},"deposit"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function deposit(\n    address token,\n    uint256 amount\n  ) external\n")),(0,r.kt)("p",null,"Deposit collateral into vault"),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"token")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the token to deposit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of the token to deposit")))),(0,r.kt)("h3",{id:"depositfor"},"depositFor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function depositFor(\n    address to,\n    address token,\n    uint256 amount\n  ) external\n")),(0,r.kt)("p",null,"Deposit the collateral token for other account"),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"to")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the account to deposit to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"token")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of collateral token")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of the token to deposit")))),(0,r.kt)("h3",{id:"depositether"},"depositEther"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function depositEther(\n  ) external\n")),(0,r.kt)("p",null,"Deposit ETH as collateral into vault"),(0,r.kt)("h3",{id:"depositetherfor"},"depositEtherFor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function depositEtherFor(\n    address to\n  ) external\n")),(0,r.kt)("p",null,"Deposit ETH as collateral for specified account"),(0,r.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"to")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the account to deposit to")))),(0,r.kt)("h3",{id:"withdraw"},"withdraw"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function withdraw(\n    address token,\n    uint256 amount\n  ) external\n")),(0,r.kt)("p",null,"Withdraw collateral from vault"),(0,r.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"token")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the token to withdraw")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of the token to withdraw")))),(0,r.kt)("h3",{id:"withdrawether"},"withdrawEther"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function withdrawEther(\n    uint256 amount\n  ) external\n")),(0,r.kt)("p",null,"Withdraw ETH from vault"),(0,r.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of the ETH to withdraw")))),(0,r.kt)("h3",{id:"liquidatecollateral"},"liquidateCollateral"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function liquidateCollateral(\n    address trader,\n    address token,\n    uint256 amount,\n    bool isDenominatedInSettlementToken\n  ) external returns (uint256)\n")),(0,r.kt)("p",null,"Liquidate trader's collateral by given settlement token amount or non settlement token amount"),(0,r.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of trader that will be liquidated")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"token")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of non settlement collateral token that the trader will be liquidated")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of settlement token that the liquidator will repay for trader or")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"          the amount of non-settlement collateral token that the liquidator will charge from trader\n")),(0,r.kt)("p",null,"|",(0,r.kt)("inlineCode",{parentName:"p"},"isDenominatedInSettlementToken")," | bool | Whether the amount is denominated in settlement token or not"),(0,r.kt)("h4",{id:"return-values"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of a non-settlement token (in its native decimals) that is liquidated")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    when `isDenominatedInSettlementToken` is true or the amount of settlement token that is repaid\n    when `isDenominatedInSettlementToken` is false\n")),(0,r.kt)("h3",{id:"getsettlementtoken"},"getSettlementToken"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getSettlementToken(\n  ) external returns (address)\n")),(0,r.kt)("p",null,"Get the settlement token address"),(0,r.kt)("p",null,"We assume the settlement token should match the denominator of the price oracle.\ni.e. if the settlement token is USDC, then the oracle should be priced in USD"),(0,r.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"settlementToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the settlement token")))),(0,r.kt)("h3",{id:"decimals"},"decimals"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function decimals(\n  ) external returns (uint8)\n")),(0,r.kt)("p",null,"Get settlement token decimals"),(0,r.kt)("p",null,"cached the settlement token's decimal for gas optimization"),(0,r.kt)("h4",{id:"return-values-2"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"decimals")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The decimals of settlement token")))),(0,r.kt)("h3",{id:"gettotaldebt"},"getTotalDebt"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTotalDebt(\n  ) external returns (uint256)\n")),(0,r.kt)("p",null,"Get the borrowed settlement token amount from insurance fund"),(0,r.kt)("h4",{id:"return-values-3"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"debtAmount")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The debt amount (in settlement token's decimals)")))),(0,r.kt)("h3",{id:"getclearinghouseconfig"},"getClearingHouseConfig"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getClearingHouseConfig(\n  ) external returns (address)\n")),(0,r.kt)("p",null,"Get ",(0,r.kt)("inlineCode",{parentName:"p"},"ClearingHouseConfig")," contract address"),(0,r.kt)("h4",{id:"return-values-4"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"clearingHouseConfig")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of ",(0,r.kt)("inlineCode",{parentName:"td"},"ClearingHouseConfig")," contract")))),(0,r.kt)("h3",{id:"getaccountbalance"},"getAccountBalance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getAccountBalance(\n  ) external returns (address)\n")),(0,r.kt)("p",null,"Get ",(0,r.kt)("inlineCode",{parentName:"p"},"AccountBalance")," contract address"),(0,r.kt)("h4",{id:"return-values-5"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"accountBalance")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of ",(0,r.kt)("inlineCode",{parentName:"td"},"AccountBalance")," contract")))),(0,r.kt)("h3",{id:"getinsurancefund"},"getInsuranceFund"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getInsuranceFund(\n  ) external returns (address)\n")),(0,r.kt)("p",null,"Get ",(0,r.kt)("inlineCode",{parentName:"p"},"InsuranceFund")," contract address"),(0,r.kt)("h4",{id:"return-values-6"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"insuranceFund")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of ",(0,r.kt)("inlineCode",{parentName:"td"},"InsuranceFund")," contract")))),(0,r.kt)("h3",{id:"getexchange"},"getExchange"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getExchange(\n  ) external returns (address)\n")),(0,r.kt)("p",null,"Get ",(0,r.kt)("inlineCode",{parentName:"p"},"Exchange")," contract address"),(0,r.kt)("h4",{id:"return-values-7"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"exchange")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of ",(0,r.kt)("inlineCode",{parentName:"td"},"Exchange")," contract")))),(0,r.kt)("h3",{id:"getclearinghouse"},"getClearingHouse"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getClearingHouse(\n  ) external returns (address)\n")),(0,r.kt)("p",null,"Get ",(0,r.kt)("inlineCode",{parentName:"p"},"ClearingHouse")," contract address"),(0,r.kt)("h4",{id:"return-values-8"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"clearingHouse")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of ",(0,r.kt)("inlineCode",{parentName:"td"},"ClearingHouse")," contract")))),(0,r.kt)("h3",{id:"getcollateralmanager"},"getCollateralManager"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getCollateralManager(\n  ) external returns (address)\n")),(0,r.kt)("p",null,"Get ",(0,r.kt)("inlineCode",{parentName:"p"},"CollateralManager")," contract address"),(0,r.kt)("h4",{id:"return-values-9"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"clearingHouse")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of ",(0,r.kt)("inlineCode",{parentName:"td"},"CollateralManager")," contract")))),(0,r.kt)("h3",{id:"getweth9"},"getWETH9"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getWETH9(\n  ) external returns (address)\n")),(0,r.kt)("p",null,"Get ",(0,r.kt)("inlineCode",{parentName:"p"},"WETH9")," contract address"),(0,r.kt)("h4",{id:"return-values-10"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"clearingHouse")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of ",(0,r.kt)("inlineCode",{parentName:"td"},"WETH9")," contract")))),(0,r.kt)("h3",{id:"getbalance"},"getBalance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getBalance(\n  ) public returns (int256)\n")),(0,r.kt)("p",null,"Get the specified trader's settlement token balance, without pending fee, funding payment\nand owed realized PnL"),(0,r.kt)("p",null,"The function is equivalent to ",(0,r.kt)("inlineCode",{parentName:"p"},"getBalanceByToken(trader, settlementToken)"),"\nWe keep this function solely for backward-compatibility with the older single-collateral system.\nIn practical applications, the developer might want to use ",(0,r.kt)("inlineCode",{parentName:"p"},"getSettlementTokenValue()")," instead\nbecause the latter includes pending fee, funding payment etc.\nand therefore more accurately reflects a trader's settlement (ex. USDC) balance"),(0,r.kt)("h4",{id:"return-values-11"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"balance")),(0,r.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The balance amount (in settlement token's decimals)")))),(0,r.kt)("h3",{id:"getbalancebytoken"},"getBalanceByToken"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getBalanceByToken(\n    address trader,\n    address token\n  ) public returns (int256)\n")),(0,r.kt)("p",null,"Get the balance of Vault of the specified collateral token and trader"),(0,r.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"token")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the collateral token")))),(0,r.kt)("h4",{id:"return-values-12"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"balance")),(0,r.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The balance amount (in its native decimals)")))),(0,r.kt)("h3",{id:"getcollateraltokens"},"getCollateralTokens"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getCollateralTokens(\n  ) external returns (address[])\n")),(0,r.kt)("p",null,"Get they array of collateral token addresses that a trader has"),(0,r.kt)("h4",{id:"return-values-13"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"collateralTokens")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"array of collateral token addresses")))),(0,r.kt)("h3",{id:"getaccountvalue"},"getAccountValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getAccountValue(\n    address trader\n  ) public returns (int256)\n")),(0,r.kt)("p",null,"Get account value (denominated in settlement token) of the specified trader"),(0,r.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")))),(0,r.kt)("h4",{id:"return-values-14"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"accountValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"account value (in settlement token's decimals)")))),(0,r.kt)("h3",{id:"getfreecollateral"},"getFreeCollateral"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getFreeCollateral(\n    address trader\n  ) public returns (uint256)\n")),(0,r.kt)("p",null,"Get the free collateral value denominated in the settlement token of the specified trader"),(0,r.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")))),(0,r.kt)("h4",{id:"return-values-15"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"freeCollateral")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"the value (in settlement token's decimals) of free collateral available")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    for withdraw or opening new positions or orders)\n")),(0,r.kt)("h3",{id:"getfreecollateralbyratio"},"getFreeCollateralByRatio"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getFreeCollateralByRatio(\n    address trader,\n    uint24 ratio\n  ) public returns (int256)\n")),(0,r.kt)("p",null,"Get the free collateral amount of the specified trader and collateral ratio"),(0,r.kt)("p",null,"There are three configurations for different insolvency risk tolerances:\n",(0,r.kt)("strong",{parentName:"p"},"conservative, moderate &aggressive"),". We will start with the ",(0,r.kt)("strong",{parentName:"p"},"conservative")," one\nand gradually move to ",(0,r.kt)("strong",{parentName:"p"},"aggressive")," to increase capital efficiency"),(0,r.kt)("h4",{id:"parameters-9"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ratio")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint24"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The margin requirement ratio, imRatio or mmRatio")))),(0,r.kt)("h4",{id:"return-values-16"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"freeCollateralByRatio")),(0,r.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"freeCollateral (in settlement token's decimals), by using the")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    input margin requirement ratio; can be negative\n")),(0,r.kt)("h3",{id:"getfreecollateralbytoken"},"getFreeCollateralByToken"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getFreeCollateralByToken(\n    address trader,\n    address token\n  ) public returns (uint256)\n")),(0,r.kt)("p",null,"Get the free collateral amount of the specified collateral token of specified trader"),(0,r.kt)("h4",{id:"parameters-10"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"token")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the collateral token")))),(0,r.kt)("h4",{id:"return-values-17"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"freeCollateral")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"amount of that token (in the token's native decimals)")))),(0,r.kt)("h3",{id:"getsettlementtokenvalue"},"getSettlementTokenValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getSettlementTokenValue(\n    address trader\n  ) public returns (int256)\n")),(0,r.kt)("p",null,"Get the specified trader's settlement value, including pending fee, funding payment,\nowed realized PnL and unrealized PnL"),(0,r.kt)("p",null,"Note the difference between ",(0,r.kt)("inlineCode",{parentName:"p"},"settlementTokenBalanceX10_S"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"getSettlementTokenValue()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"getBalance()"),":\nThey are all settlement token balances but with or without\npending fee, funding payment, owed realized PnL, unrealized PnL, respectively\nIn practical applications, we use ",(0,r.kt)("inlineCode",{parentName:"p"},"getSettlementTokenValue()")," to get the trader's debt (if < 0)"),(0,r.kt)("h4",{id:"parameters-11"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")))),(0,r.kt)("h4",{id:"return-values-18"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"balance")),(0,r.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The balance amount (in settlement token's decimals)")))),(0,r.kt)("h3",{id:"isliquidatable"},"isLiquidatable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function isLiquidatable(\n    address trader\n  ) public returns (bool)\n")),(0,r.kt)("h4",{id:"parameters-12"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")))),(0,r.kt)("h4",{id:"return-values-19"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"If the trader can be liquidated")))),(0,r.kt)("h3",{id:"getmarginrequirementforcollateralliquidation"},"getMarginRequirementForCollateralLiquidation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getMarginRequirementForCollateralLiquidation(\n    address trader\n  ) public returns (int256)\n")),(0,r.kt)("p",null,"get the margin requirement for collateral liquidation of a trader"),(0,r.kt)("p",null,"this value is compared with ",(0,r.kt)("inlineCode",{parentName:"p"},"ClearingHouse.getAccountValue()")," (int)"),(0,r.kt)("h4",{id:"parameters-13"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")))),(0,r.kt)("h4",{id:"return-values-20"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"margin")),(0,r.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"requirement (in 18 decimals)")))),(0,r.kt)("h3",{id:"getcollateralmmratio"},"getCollateralMmRatio"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getCollateralMmRatio(\n  ) public returns (uint24)\n")),(0,r.kt)("p",null,"Get the maintenance margin ratio for collateral liquidation"),(0,r.kt)("h4",{id:"return-values-21"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"collateralMmRatio")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint24"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maintenance margin ratio for collateral liquidation")))),(0,r.kt)("h3",{id:"getrepaidsettlementbycollateral"},"getRepaidSettlementByCollateral"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getRepaidSettlementByCollateral(\n    address token,\n    uint256 collateral\n  ) public returns (uint256 settlementX10_S)\n")),(0,r.kt)("p",null,"Get a trader's repaid settlement amount by a given collateral amount"),(0,r.kt)("h4",{id:"parameters-14"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"token")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the token of the trader's collateral")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"collateral")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of collateral token the liquidator wants to get")))),(0,r.kt)("h4",{id:"return-values-22"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"settlementX10_S")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The settlement amount(in settlement token's decimals) the liquidator needs to pay")))),(0,r.kt)("h3",{id:"getliquidatablecollateralbysettlement"},"getLiquidatableCollateralBySettlement"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getLiquidatableCollateralBySettlement(\n    address token,\n    uint256 settlementX10_S\n  ) public returns (uint256 collateral)\n")),(0,r.kt)("p",null,"Get a trader's liquidatable collateral amount by a given settlement amount"),(0,r.kt)("h4",{id:"parameters-15"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"token")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the token of the trader's collateral")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"settlementX10_S")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of settlement token the liquidator wants to pay")))),(0,r.kt)("h4",{id:"return-values-23"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"collateral")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The collateral amount(in its native decimals) the liquidator can get")))),(0,r.kt)("h3",{id:"getmaxrepaidsettlementandliquidatablecollateral"},"getMaxRepaidSettlementAndLiquidatableCollateral"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getMaxRepaidSettlementAndLiquidatableCollateral(\n    address trader,\n    address token\n  ) public returns (uint256 maxRepaidSettlementX10_S, uint256 maxLiquidatableCollateral)\n")),(0,r.kt)("p",null,"Get a trader's max repaid settlement & max liquidatable collateral by a given collateral token"),(0,r.kt)("p",null,"formula:\nmaxRepaidSettlement = maxLiquidatableCollateral ",(0,r.kt)("em",{parentName:"p"}," indexTwap\nmaxLiquidatableCollateral =\nmin(maxRepaidSettlement / (indexTwap ")," (1 - discountRatio)), getBalanceByToken(trader, token))"),(0,r.kt)("h4",{id:"parameters-16"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the trader")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"token")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the token of the trader's collateral")))),(0,r.kt)("h4",{id:"return-values-24"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"maxRepaidSettlementX10_S")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum settlement amount(in settlement token's decimals)")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    the liquidator needs to pay to liquidate a trader's collateral token\n")),(0,r.kt)("p",null,"|",(0,r.kt)("inlineCode",{parentName:"p"},"maxLiquidatableCollateral")," | uint256 | The maximum liquidatable collateral amount\n(in the collateral token's native decimals) of a trader"))}m.isMDXComponent=!0}}]);