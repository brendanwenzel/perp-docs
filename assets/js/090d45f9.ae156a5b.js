"use strict";(self.webpackChunklushan_docs=self.webpackChunklushan_docs||[]).push([[650],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),g=r,m=p["".concat(s,".").concat(g)]||p[g]||d[g]||i;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2676:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={},s=void 0,c={unversionedId:"Contracts/Exchange",id:"Contracts/Exchange",isDocsHomePage:!1,title:"Exchange",description:"InternalReplaySwapParams",source:"@site/docs/Contracts/Exchange.md",sourceDirName:"Contracts",slug:"/Contracts/Exchange",permalink:"/lushan-docs/docs/Contracts/Exchange",editUrl:"https://github.com/perpetual-protocol/lushan-docs/tree/main/docs/Contracts/Exchange.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ClearingHouseConfig",permalink:"/lushan-docs/docs/Contracts/ClearingHouseConfig"},next:{title:"InsuranceFund",permalink:"/lushan-docs/docs/Contracts/InsuranceFund"}},u=[{value:"InternalReplaySwapParams",id:"internalreplayswapparams",children:[]},{value:"InternalSwapResponse",id:"internalswapresponse",children:[]},{value:"InternalRealizePnlParams",id:"internalrealizepnlparams",children:[]},{value:"Functions",id:"functions",children:[{value:"initialize",id:"initialize",children:[]},{value:"setAccountBalance",id:"setaccountbalance",children:[]},{value:"setMaxTickCrossedWithinBlock",id:"setmaxtickcrossedwithinblock",children:[]},{value:"uniswapV3SwapCallback",id:"uniswapv3swapcallback",children:[]},{value:"swap",id:"swap",children:[]},{value:"settleFunding",id:"settlefunding",children:[]},{value:"getOrderBook",id:"getorderbook",children:[]},{value:"getAccountBalance",id:"getaccountbalance",children:[]},{value:"getClearingHouseConfig",id:"getclearinghouseconfig",children:[]},{value:"getMaxTickCrossedWithinBlock",id:"getmaxtickcrossedwithinblock",children:[]},{value:"getPnlToBeRealized",id:"getpnltoberealized",children:[]},{value:"getAllPendingFundingPayment",id:"getallpendingfundingpayment",children:[]},{value:"getPendingFundingPayment",id:"getpendingfundingpayment",children:[]},{value:"getSqrtMarkTwapX96",id:"getsqrtmarktwapx96",children:[]}]}],d={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"internalreplayswapparams"},"InternalReplaySwapParams"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  struct InternalReplaySwapParams(\n    address baseToken\n    bool isBaseToQuote\n    bool isExactInput\n    uint256 amount\n    uint160 sqrtPriceLimitX96\n  )\n")),(0,i.kt)("h3",{id:"internalswapresponse"},"InternalSwapResponse"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  struct InternalSwapResponse(\n    int256 base\n    int256 quote\n    int256 exchangedPositionSize\n    int256 exchangedPositionNotional\n    uint256 fee\n    uint256 insuranceFundFee\n    int24 tick\n  )\n")),(0,i.kt)("h3",{id:"internalrealizepnlparams"},"InternalRealizePnlParams"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  struct InternalRealizePnlParams(\n    address trader\n    address baseToken\n    int256 takerPositionSize\n    int256 takerOpenNotional\n    int256 base\n    int256 quote\n  )\n")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"initialize"},"initialize"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function initialize(\n  ) external\n")),(0,i.kt)("h3",{id:"setaccountbalance"},"setAccountBalance"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function setAccountBalance(\n  ) external\n")),(0,i.kt)("h3",{id:"setmaxtickcrossedwithinblock"},"setMaxTickCrossedWithinBlock"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function setMaxTickCrossedWithinBlock(\n  ) external\n")),(0,i.kt)("h3",{id:"uniswapv3swapcallback"},"uniswapV3SwapCallback"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function uniswapV3SwapCallback(\n    int256 amount0Delta,\n    int256 amount1Delta,\n    bytes data\n  ) external\n")),(0,i.kt)("p",null,"Called to ",(0,i.kt)("inlineCode",{parentName:"p"},"msg.sender")," after executing a swap via IUniswapV3Pool#swap."),(0,i.kt)("p",null,"In the implementation you must pay the pool tokens owed for the swap.\nThe caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\namount0Delta and amount1Delta can both be 0 if no tokens were swapped."),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"amount0Delta")),(0,i.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of token0 that was sent (negative) or must be received (positive) by the pool by")))),(0,i.kt)("p",null,"the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n|",(0,i.kt)("inlineCode",{parentName:"p"},"amount1Delta")," | int256 | The amount of token1 that was sent (negative) or must be received (positive) by the pool by\nthe end of the swap. If positive, the callback must send that amount of token1 to the pool.\n|",(0,i.kt)("inlineCode",{parentName:"p"},"data")," | bytes | Any data passed through by the caller via the IUniswapV3PoolActions#swap call"),(0,i.kt)("h3",{id:"swap"},"swap"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function swap(\n  ) external returns (struct IExchange.SwapResponse)\n")),(0,i.kt)("h3",{id:"settlefunding"},"settleFunding"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function settleFunding(\n  ) external returns (int256 fundingPayment, struct Funding.Growth fundingGrowthGlobal)\n")),(0,i.kt)("p",null,"this function should be called at the beginning of every high-level function, such as openPosition()\nwhile it doesn't matter who calls this function\nthis function 1. settles personal funding payment 2. updates global funding growth\npersonal funding payment is settled whenever there is pending funding payment\nthe global funding growth update only happens once per unique timestamp (not blockNumber, due to Arbitrum)"),(0,i.kt)("h4",{id:"return-values"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fundingPayment")),(0,i.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"the funding payment of a trader in one market should be settled into owned realized Pnl")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fundingGrowthGlobal")),(0,i.kt)("td",{parentName:"tr",align:"left"},"struct Funding.Growth"),(0,i.kt)("td",{parentName:"tr",align:"left"},"the up-to-date globalFundingGrowth, usually used for later calculations")))),(0,i.kt)("h3",{id:"getorderbook"},"getOrderBook"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getOrderBook(\n  ) external returns (address)\n")),(0,i.kt)("h3",{id:"getaccountbalance"},"getAccountBalance"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getAccountBalance(\n  ) external returns (address)\n")),(0,i.kt)("h3",{id:"getclearinghouseconfig"},"getClearingHouseConfig"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getClearingHouseConfig(\n  ) external returns (address)\n")),(0,i.kt)("h3",{id:"getmaxtickcrossedwithinblock"},"getMaxTickCrossedWithinBlock"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getMaxTickCrossedWithinBlock(\n  ) external returns (uint24)\n")),(0,i.kt)("h3",{id:"getpnltoberealized"},"getPnlToBeRealized"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getPnlToBeRealized(\n  ) external returns (int256)\n")),(0,i.kt)("h3",{id:"getallpendingfundingpayment"},"getAllPendingFundingPayment"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getAllPendingFundingPayment(\n  ) external returns (int256 pendingFundingPayment)\n")),(0,i.kt)("h3",{id:"getpendingfundingpayment"},"getPendingFundingPayment"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getPendingFundingPayment(\n  ) public returns (int256)\n")),(0,i.kt)("p",null,"this is the view version of _updateFundingGrowth()"),(0,i.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"the")),(0,i.kt)("td",{parentName:"tr",align:"left"},"int256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"pending funding payment of a trader in one market, including liquidity & balance coefficients")))),(0,i.kt)("h3",{id:"getsqrtmarktwapx96"},"getSqrtMarkTwapX96"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getSqrtMarkTwapX96(\n  ) public returns (uint160)\n")))}p.isMDXComponent=!0}}]);