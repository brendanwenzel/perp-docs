"use strict";(self.webpackChunklushan_docs=self.webpackChunklushan_docs||[]).push([[567],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4556:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],s={},l=void 0,c={unversionedId:"Contracts/MetaTxGateway",id:"Contracts/MetaTxGateway",isDocsHomePage:!1,title:"MetaTxGateway",description:"Functions",source:"@site/docs/Contracts/MetaTxGateway.md",sourceDirName:"Contracts",slug:"/Contracts/MetaTxGateway",permalink:"/lushan-docs/docs/Contracts/MetaTxGateway",editUrl:"https://github.com/perpetual-protocol/lushan-docs/main/docs/Contracts/MetaTxGateway.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MarketRegistry",permalink:"/lushan-docs/docs/Contracts/MarketRegistry"},next:{title:"OrderBook",permalink:"/lushan-docs/docs/Contracts/OrderBook"}},u=[{value:"Functions",id:"functions",children:[{value:"initialize",id:"initialize",children:[]},{value:"addToWhitelists",id:"addtowhitelists",children:[]},{value:"removeFromWhitelists",id:"removefromwhitelists",children:[]},{value:"executeMetaTransaction",id:"executemetatransaction",children:[]},{value:"getNonce",id:"getnonce",children:[]},{value:"isInWhitelists",id:"isinwhitelists",children:[]},{value:"_getChainID",id:"_getchainid",children:[]},{value:"_toTypedMessageHash",id:"_totypedmessagehash",children:[]},{value:"_hashMetaTransaction",id:"_hashmetatransaction",children:[]},{value:"_verify",id:"_verify",children:[]}]},{value:"Events",id:"events",children:[{value:"MetaTransactionExecuted",id:"metatransactionexecuted",children:[]}]}],d={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"initialize"},"initialize"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function initialize(\n  ) external\n")),(0,i.kt)("h3",{id:"addtowhitelists"},"addToWhitelists"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function addToWhitelists(\n    address addr\n  ) external\n")),(0,i.kt)("p",null,"add an address to the whitelist. Only contracts in the whitelist can be executed by this gateway.\nThis prevents the gateway from being abused to execute arbitrary meta txs"),(0,i.kt)("p",null,"only owner can call"),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"addr")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"an address")))),(0,i.kt)("h3",{id:"removefromwhitelists"},"removeFromWhitelists"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function removeFromWhitelists(\n  ) external\n")),(0,i.kt)("h3",{id:"executemetatransaction"},"executeMetaTransaction"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function executeMetaTransaction(\n  ) external returns (bytes)\n")),(0,i.kt)("h3",{id:"getnonce"},"getNonce"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getNonce(\n  ) external returns (uint256 nonce)\n")),(0,i.kt)("h3",{id:"isinwhitelists"},"isInWhitelists"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function isInWhitelists(\n  ) public returns (bool)\n")),(0,i.kt)("h3",{id:"_getchainid"},"_getChainID"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function _getChainID(\n  ) internal returns (uint256 id)\n")),(0,i.kt)("h3",{id:"_totypedmessagehash"},"_toTypedMessageHash"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function _toTypedMessageHash(\n  ) internal returns (bytes32)\n")),(0,i.kt)("p",null,"Accept message hash and returns hash message in EIP712 compatible form\nSo that it can be used to recover signer from signature signed using EIP712 formatted data\n",(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-712"},"https://eips.ethereum.org/EIPS/eip-712"),'\n"',"\\",'x19" makes the encoding deterministic\n"',"\\",'x01" is the version byte to make it compatible to EIP-191'),(0,i.kt)("h3",{id:"_hashmetatransaction"},"_hashMetaTransaction"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function _hashMetaTransaction(\n  ) internal returns (bytes32)\n")),(0,i.kt)("h3",{id:"_verify"},"_verify"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function _verify(\n  ) internal returns (bool)\n")),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("h3",{id:"metatransactionexecuted"},"MetaTransactionExecuted"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  event MetaTransactionExecuted(\n  )\n")))}p.isMDXComponent=!0}}]);